# Build FAT filesystem header for firmware update.
#
# Each flash size requires its own file system.
# mtools-n.conf defines filesystem size, and
# updfs-n.c containing fs header as a C array is generated here,
# where n is the flash size in kilobytes.
#
# The author has waived all copyright and related or neighbouring rights
# to this file and placed it in public domain.

SHELL = bash
SIZE = $(word 2,$(shell fgrep '\#size' $(MTOOLSRC)))
NBLK = $(wordlist 2,99,$(shell sed -n 's/^.*[dr]s=/* /p' $(MTOOLSRC)))

export MTOOLSRC = $(basename $@).conf

%.c:	%.img updfs.mk
	@echo "/*" > $@
	@echo "    FAT filesystem header." >> $@
	@echo "    This file is automatically generated." >> $@
	@echo >> $@
	mdir a: >> $@
	@echo "*/" >> $@
	@echo "__attribute__ ((aligned (4)))" >> $@
	xxd -i -l $(SIZE) $< >> $@
	@echo "unsigned int $(subst -,_,$*)_nblk = $(NBLK);" >> $@

updfs-%.img: updfs-%.conf updfs.mk
	mformat -C -c2 -d1 -r1 -v "BOOTLOADER" a:
	mcopy -t $< a:readme.txt
	mattrib +r a:readme.txt
	dd if=/dev/zero count=16 bs=1k of=tmp
	mcopy tmp a:boot.bin
	mattrib +r a:boot.bin
	dd if=/dev/zero count=$$(($*-16)) bs=1k of=tmp
	mcopy tmp a:firmware.bin
	dd if=/dev/zero bs=1 conv=notrunc seek=446 count=16 of=$@
	rm tmp

layfs-%.img: layfs-%.conf updfs.mk
	mformat -C -d1 -r1 -v "LAYOUT" a:
	dd if=/dev/zero count=$$(($(NBLK) - $(SIZE)/512)) of=tmp
	mcopy tmp a:layout.bin
	rm tmp
